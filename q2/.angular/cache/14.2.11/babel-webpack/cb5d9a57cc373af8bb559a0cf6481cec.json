{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Directive, Inject, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CountUp } from 'countup.js';\nimport { isPlatformBrowser } from '@angular/common';\n\nclass CountUpDirective {\n  constructor(el, zone, platformId) {\n    this.el = el;\n    this.zone = zone;\n    this.platformId = platformId;\n    this.options = {};\n    this.reanimateOnClick = true; // eslint-disable-next-line @angular-eslint/no-output-native\n\n    this.complete = new EventEmitter();\n  } // Re-animate if preference is set.\n\n\n  onClick() {\n    if (this.reanimateOnClick) {\n      this.animate();\n    }\n  }\n\n  ngOnChanges(changes) {\n    // don't animate server-side (universal)\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    const {\n      options,\n      endVal\n    } = changes;\n\n    if (endVal?.currentValue !== undefined) {\n      if (this.countUp !== undefined) {\n        this.zone.runOutsideAngular(() => {\n          this.countUp.update(this.endVal);\n        });\n      } else {\n        this.initAndRun();\n      }\n    } else if (options?.currentValue !== undefined) {\n      this.initAndRun();\n    }\n  }\n\n  animate() {\n    this.zone.runOutsideAngular(() => {\n      this.countUp.reset();\n      this.countUp.start(() => {\n        this.zone.run(() => {\n          this.complete.emit();\n        });\n      });\n    });\n  }\n\n  initAndRun() {\n    this.zone.runOutsideAngular(() => {\n      this.countUp = new CountUp(this.el.nativeElement, this.endVal, this.options);\n\n      if (!this.options.enableScrollSpy) {\n        this.animate();\n      }\n    });\n  }\n\n}\n\nCountUpDirective.ɵfac = function CountUpDirective_Factory(t) {\n  return new (t || CountUpDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nCountUpDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CountUpDirective,\n  selectors: [[\"\", \"countUp\", \"\"]],\n  hostBindings: function CountUpDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function CountUpDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n  },\n  inputs: {\n    endVal: [\"countUp\", \"endVal\"],\n    options: \"options\",\n    reanimateOnClick: \"reanimateOnClick\"\n  },\n  outputs: {\n    complete: \"complete\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountUpDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[countUp]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    endVal: [{\n      type: Input,\n      args: ['countUp']\n    }],\n    options: [{\n      type: Input\n    }],\n    reanimateOnClick: [{\n      type: Input\n    }],\n    complete: [{\n      type: Output\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\n\nclass CountUpModule {}\n\nCountUpModule.ɵfac = function CountUpModule_Factory(t) {\n  return new (t || CountUpModule)();\n};\n\nCountUpModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CountUpModule\n});\nCountUpModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountUpModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [CountUpDirective],\n      exports: [CountUpDirective]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of count-up\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CountUpDirective, CountUpModule };","map":{"version":3,"names":["i0","EventEmitter","PLATFORM_ID","Directive","Inject","Input","Output","HostListener","NgModule","CountUp","isPlatformBrowser","CountUpDirective","constructor","el","zone","platformId","options","reanimateOnClick","complete","onClick","animate","ngOnChanges","changes","endVal","currentValue","undefined","countUp","runOutsideAngular","update","initAndRun","reset","start","run","emit","nativeElement","enableScrollSpy","ɵfac","ElementRef","NgZone","ɵdir","type","args","selector","Object","decorators","CountUpModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["/Users/sidharthdinesh/Desktop/Interbiz/q2/node_modules/ngx-countup/fesm2020/ngx-countup.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Directive, Inject, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CountUp } from 'countup.js';\nimport { isPlatformBrowser } from '@angular/common';\n\nclass CountUpDirective {\n    constructor(el, zone, platformId) {\n        this.el = el;\n        this.zone = zone;\n        this.platformId = platformId;\n        this.options = {};\n        this.reanimateOnClick = true;\n        // eslint-disable-next-line @angular-eslint/no-output-native\n        this.complete = new EventEmitter();\n    }\n    // Re-animate if preference is set.\n    onClick() {\n        if (this.reanimateOnClick) {\n            this.animate();\n        }\n    }\n    ngOnChanges(changes) {\n        // don't animate server-side (universal)\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const { options, endVal } = changes;\n        if (endVal?.currentValue !== undefined) {\n            if (this.countUp !== undefined) {\n                this.zone.runOutsideAngular(() => {\n                    this.countUp.update(this.endVal);\n                });\n            }\n            else {\n                this.initAndRun();\n            }\n        }\n        else if (options?.currentValue !== undefined) {\n            this.initAndRun();\n        }\n    }\n    animate() {\n        this.zone.runOutsideAngular(() => {\n            this.countUp.reset();\n            this.countUp.start(() => {\n                this.zone.run(() => {\n                    this.complete.emit();\n                });\n            });\n        });\n    }\n    initAndRun() {\n        this.zone.runOutsideAngular(() => {\n            this.countUp = new CountUp(this.el.nativeElement, this.endVal, this.options);\n            if (!this.options.enableScrollSpy) {\n                this.animate();\n            }\n        });\n    }\n}\nCountUpDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: CountUpDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Directive });\nCountUpDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.2\", type: CountUpDirective, selector: \"[countUp]\", inputs: { endVal: [\"countUp\", \"endVal\"], options: \"options\", reanimateOnClick: \"reanimateOnClick\" }, outputs: { complete: \"complete\" }, host: { listeners: { \"click\": \"onClick()\" } }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: CountUpDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[countUp]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { endVal: [{\n                type: Input,\n                args: ['countUp']\n            }], options: [{\n                type: Input\n            }], reanimateOnClick: [{\n                type: Input\n            }], complete: [{\n                type: Output\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n\nclass CountUpModule {\n}\nCountUpModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: CountUpModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCountUpModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: CountUpModule, declarations: [CountUpDirective], exports: [CountUpDirective] });\nCountUpModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: CountUpModule, imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: CountUpModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [CountUpDirective],\n                    exports: [CountUpDirective]\n                }]\n        }] });\n\n/*\n * Public API Surface of count-up\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CountUpDirective, CountUpModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}